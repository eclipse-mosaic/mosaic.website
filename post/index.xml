<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles | Eclipse MOSAIC ‚Äì A Multi-Domain and Multi-Scale Simulation Framework for Connected and Automated Mobility</title>
    <link>https://www.eclipse.dev/mosaic/post/</link>
      <atom:link href="https://www.eclipse.dev/mosaic/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Articles</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 25 Mar 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://www.eclipse.dev/mosaic/images/logo.svg</url>
      <title>Articles</title>
      <link>https://www.eclipse.dev/mosaic/post/</link>
    </image>
    
    <item>
      <title>2024 Spring Release of Eclipse MOSAIC</title>
      <link>https://www.eclipse.dev/mosaic/post/release-24-0/</link>
      <pubDate>Mon, 25 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/release-24-0/</guid>
      <description>&lt;p&gt;&lt;strong&gt;The spring release of Eclipse MOSAIC has arrived! The committer team from Fraunhofer FOKUS and DCAITI is proud to present Eclipse MOSAIC 24.0 to the open source community.
This new version comes with an updated routing library and improved simulation of cellular communication.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;üöÄ You can find the new version in our 





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/download/&#34;&gt;Download section&lt;/a&gt;, and in our 




&lt;a href=&#34;https://github.com/eclipse/mosaic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;release-date&#34;&gt;Release Date&lt;/h3&gt;
&lt;p&gt;2024-03-25&lt;/p&gt;
&lt;h3 id=&#34;changelog&#34;&gt;Changelog&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;* [A-] Renamed API method getPayLoad() to getPayload(). Needs migration of all V2xMessage extensions.
* [A+] Upgraded the integrated routing engine GraphHopper, enabling improved calculation of alternative routes.
* [A+] Route calculation and handling is much more robust now.
* [C+] Cellular simulator now models headers on top of payloads based on underlying protocols.
* [M-] Upgraded several dependencies to most recent versions.
* [T+] Lane change mode OFF now completely disables lane-changing. New mode `FOLLOW_ROUTE` disables lane changing except for route following purposes.
* [T-] Vehicle ids from existing SUMO scenarios can now be named using UTF-8 characters, such as Arabic, Chinese, Hebrew, and other.
* [T+] Now support SUMO 1.19.0
* [X+] New parking ambassador allows to put standing vehicles into the world which are synchronized with other simulators, such as SUMO (Extended).
* [X+] Major upgrade of visualization in Phabmacs and MOSAIC 3D visualizer by using new graphics engine KOOL (Extended).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‚≠ê A huge thanks to all users who contributed to this release:





&lt;a href=&#34;https://github.com/FunKuchen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; FunKuchen&lt;/a&gt;,





&lt;a href=&#34;https://github.com/iwillitried&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; iwillitried &lt;/a&gt;,





&lt;a href=&#34;https://github.com/kschrab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; kschrab&lt;/a&gt;,





&lt;a href=&#34;https://github.com/schwepmo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; schwepmo&lt;/a&gt;, and





&lt;a href=&#34;https://github.com/rprotzmann&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; rprotzmann&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Changelog Legend&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[M]&lt;/code&gt; &lt;em&gt;Eclipse MOSAIC&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[X]&lt;/code&gt; &lt;em&gt;MOSAIC Extended&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[A]&lt;/code&gt; &lt;em&gt;Application simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[C]&lt;/code&gt; &lt;em&gt;Communication simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[E]&lt;/code&gt; &lt;em&gt;Environment simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[N]&lt;/code&gt; &lt;em&gt;Navigation component&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[S]&lt;/code&gt; &lt;em&gt;Scenario-convert&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[T]&lt;/code&gt; &lt;em&gt;Traffic simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[+/-]&lt;/code&gt; &lt;em&gt;new Feature/Bugfix&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Simulated Testing of Traffic State Estimation using Eclipse MOSAIC</title>
      <link>https://www.eclipse.dev/mosaic/post/traffic-state-estimation/</link>
      <pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/traffic-state-estimation/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Daily commutes can quickly turn into stressful affairs when overcrowded roads become congested and what would be a 20 minute ride becomes an hour of staring at the license plate of your fellow comrade-in-traffic.
Real-time Traffic State Estimation (TSE) aims to alleviate this strain by predicatively recognizing congested areas and offering alternative routing options. In a recent publication we established a framework for easy implementation and evaluation of novel TSE systems.&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; text-align: center; margin-bottom: 0&#34;&gt;
    &lt;div onmouseover=&#34;this.style.boxShadow=&#39;0 0 25px #68145CFF&#39;; this.style.scale=1.05&#34; onmouseout=&#34;this.style.boxShadow=&#39;none&#39;; this.style.scale=1.0&#34; style=&#34;display: flex; margin-left: auto; margin-right: auto; justify-content: center; width: fit-content; text-align: center; cursor: pointer; border: 2px solid #68145c; border-radius: 10px; padding: 10px; background-color: rgba(241,241,241,0.9); transform-origin: left center 0; position: absolute; top: 42%; left: 50%; transform: translate(-50%, -50%)&#34;&gt;
        &lt;!-- GitHub Icon --&gt;
        &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 16 16&#34; fill=&#34;currentColor&#34; style=&#34;width: 40px; height: 40px;&#34;&gt;
          &lt;path fill-rule=&#34;evenodd&#34; d=&#34;M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.20-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.20-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.20-.82 2.20-.82.44 1.10.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.20 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z&#34;/&gt;
        &lt;/svg&gt;
        &lt;!-- GitHub Link --&gt;
        &lt;a href=&#34;https://github.com/mosaic-addons/traffic-state-estimation&#34; target=&#34;_blank&#34; style=&#34;border: 2px; border-radius: 5px; margin: auto 5px auto 5px; text-decoration: none; color: #68145C; font-weight: bold;&#34;&gt;GitHub Repository&lt;/a&gt;
    &lt;/div&gt;
    &lt;img src=&#34;banner.png&#34; style=&#34;margin-top: 0; margin-bottom: 0&#34; alt=&#34;Banner displaying a visualization of TSE&#34;&gt;
&lt;/div&gt;
&lt;p&gt;Nowadays, people have become used to having access to real-time traffic information in the palm of their hands using their smartphones.
However, navigation applications like Google Maps¬© rely on large amounts of user data and don&amp;rsquo;t publish the algorithms used to retrieve the traffic information.
In an effort to make the implementation and evaluation of such Traffic State Estimation (TSE) systems more accessible, we developed an application tool chain for Eclipse MOSAIC that enables
quick prototyping in a simulated environment. They applications have been designed to be easily extendable so that you can develop your own TSE methods and compare them against results from conventional soluation.
For this purpose, we published all generated code on GitHub under the EPL-License, allowing free usage, customization, and deployment.&lt;/p&gt;
&lt;div style=&#34;display: flex; font-weight: bold; font-size: 20px; margin-left: auto; margin-right: auto; justify-content: center; width: fit-content; padding: 5px 10px; border: 2px solid #68145c; border-radius: 10px;&#34;&gt;‚ñ∂&amp;emsp;&lt;a href=&#34;https://github.com/mosaic-addons/traffic-state-estimation&#34;&gt;https://github.com/mosaic-addons/traffic-state-estimation&lt;/a&gt;&amp;emsp;‚óÄ&lt;/div&gt;
&lt;h3 id=&#34;research&#34;&gt;Research&lt;/h3&gt;
&lt;p&gt;The developed framework laid the foundation for our paper at the 




&lt;a href=&#34;https://simutools.eai-conferences.org/2023/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EAI SIMUtools 2023&lt;/a&gt; conference, which received the &lt;strong&gt;Best Paper Award&lt;/strong&gt;.
In the paper, we aimed at reviewing commonly used sensors for Traffic State Estimation in an urban environment.
All experiments were conducted on-top the traffic simulator Eclipse SUMO and the calibrated 




&lt;a href=&#34;https://github.com/mosaic-addons/best-scenario&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BeST Scenario&lt;/a&gt; with traffic in the city of Berlin.
We compared mean speed estimates from traditional induction loops with now broadly adapted Floating Car Data (FCD) retrieved from connected vehicles.&lt;/p&gt;
&lt;p&gt;Furthermore, we identified that different sensor technologies require different ways of aggregating measured samples.
When using conventional induction loops, the Time and Space Mean Speed are commonly used, which are built by calculating the arithmetic and harmonic mean of samples measured within a time interval.
For FCD-based methods, we identified metrics defined by Yoon et al.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, namely the Temporal and Spatial Mean Speeds.
By comparing these values on different road types, we concluded that on highway-like streets with continuous traffic flow all metrics function equivalently.
However, especially if roads are signalized, conventional induction loop methods fail to properly capture the ground truth.&lt;/p&gt;















&lt;figure id=&#34;figure-speed-estimates-on-different-road-segments-in-berlin-charlottenburg-where-v_gthspace01cm-represents-the-ground-truth-speed-retrieved-from-sumo-v_tmshspace01cm-and-v_smshspace01cm-are-the-time-and-space-mean-speed-retrieved-from-virtual-induction-loops-v_texttemporalhspace01cm-and-v_textspatialhspace01cm-are-the-temporal-and-spatial-mean-speed-calculated-using-received-fcd&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./plot_all_streets.png&#34; data-caption=&#34;Speed estimates on different road segments in Berlin Charlottenburg. Where $V_{GT}\hspace{0.1cm}$ represents the ground truth speed retrieved from SUMO. $V_{TMS}\hspace{0.1cm}$ and $V_{SMS}\hspace{0.1cm}$ are the time and space mean speed, retrieved from virtual induction loops. $V_{\text{temporal}}\hspace{0.1cm}$ and $V_{\text{spatial}}\hspace{0.1cm}$ are the temporal and spatial mean speed calculated using received FCD.&#34;&gt;


  &lt;img src=&#34;./plot_all_streets.png&#34; alt=&#34;&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Speed estimates on different road segments in Berlin Charlottenburg. Where $V_{GT}\hspace{0.1cm}$ represents the ground truth speed retrieved from SUMO. $V_{TMS}\hspace{0.1cm}$ and $V_{SMS}\hspace{0.1cm}$ are the time and space mean speed, retrieved from virtual induction loops. $V_{\text{temporal}}\hspace{0.1cm}$ and $V_{\text{spatial}}\hspace{0.1cm}$ are the temporal and spatial mean speed calculated using received FCD.
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Additionally, as part of our research, we also looked into required market penetration rates that can be used to still deliver reliable TSE.
We managed to reproduce results cited in literature and concluded that depending on the road type, reliable TSE requires a market penetration rate of 5‚Äì10% for city traffic.&lt;/p&gt;
&lt;p&gt;More details can be found in the paper &amp;raquo;Spatio-Temporal Speed Metrics for Traffic State Estimation on Complex Urban Roads&amp;laquo;.&lt;/p&gt;
&lt;h3 id=&#34;system-design&#34;&gt;System Design&lt;/h3&gt;
&lt;p&gt;Below, a simplified system overview is depicted. Using MOSAICs Mapping, we can equip however many vehicles with the &lt;em&gt;FcdTransmitterApp&lt;/em&gt;, which
will cause them to periodically record their positions, speeds, headings in the form of Floating Car Data and transmit it to the &lt;em&gt;TseServerApp&lt;/em&gt;.
At the heart of the server application runs a &lt;em&gt;TseKernel&lt;/em&gt; which handles the reception of FCD, traversal detection, and supervision of processors.
The kernel has been designed in a way to be easily extensible with custom processors that can individually handle received FCD and implement your own TSE metrics.
Currently, results will be stored in an SQLite database.&lt;/p&gt;















&lt;figure id=&#34;figure-simplified-system-overview&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./fcd-system-overview.drawio.png&#34; data-caption=&#34;Simplified System Overview&#34;&gt;


  &lt;img src=&#34;./fcd-system-overview.drawio.png&#34; alt=&#34;&#34; width=&#34;50%&#34; &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Simplified System Overview
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;whats-next&#34;&gt;What&amp;rsquo;s next?&lt;/h3&gt;
&lt;p&gt;In our current investigations, we only regarded calibrated traffic without major obstructions to measure mean speeds throughout the day.
However, the detection of said obstructions is one of the core use cases for TSE, so we aim to introduce and evaluate these in the future.&lt;/p&gt;
&lt;p&gt;More importantly, we are also interested in providing reliable TSE with even smaller market penetration rates by improving the data quality.
We aim to achieve this by using data from vehicular perception sensors (cameras, lidar) to enrich the Floating Car Dataset.&lt;/p&gt;
&lt;div style=&#34;display: flex; font-weight: bold; font-size: 20px; margin-left: auto; margin-right: auto; justify-content: center; width: fit-content; padding: 5px 10px; border: 2px solid #68145c; border-radius: 10px;&#34;&gt;‚ñ∂&amp;emsp;&lt;a href=&#34;https://github.com/mosaic-addons/traffic-state-estimation&#34;&gt;https://github.com/mosaic-addons/traffic-state-estimation&lt;/a&gt;&amp;emsp;‚óÄ&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;This work is related to our research in the 




&lt;a href=&#34;https://bmdv.bund.de/SharedDocs/DE/Artikel/DG/AVF-projekte/kis-m.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;KIS&amp;rsquo;M Project&lt;/a&gt;.
&lt;a href=&#34;https://bmdv.bund.de/SharedDocs/DE/Artikel/DG/AVF-projekte/kis-m.html&#34;&gt;&lt;img src=&#34;./kis-m.png&#34; style=&#34;width:35%;padding-top:0px;margin-top:2px&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Yoon, J., Noble, B., Liu, M.: Surface street traffic estimation. In: Proceedings of the 5th international conference on Mobile systems, applications and services. pp.220‚Äì232 (2007) &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>2023 Autumn Release of Eclipse MOSAIC</title>
      <link>https://www.eclipse.dev/mosaic/post/release-23-1/</link>
      <pubDate>Fri, 06 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/release-23-1/</guid>
      <description>&lt;p&gt;&lt;strong&gt;The autumn release of Eclipse MOSAIC has arrived! The committer team from Fraunhofer FOKUS and DCAITI is proud to present Eclipse MOSAIC 23.1 to the open source community.
This new version brings the perception facilities in the Application simulator to a stable state and comes with improvements across several integrated MOSAIC models.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
&lt;p&gt;MOSAIC 23.1 now requires at least &lt;strong&gt;Java 11 Runtime Environment&lt;/strong&gt; to be executed. For more details, see 





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/tutorials/getting_started/&#34;&gt;Getting Started&lt;/a&gt;.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;üöÄ You can find the new version in our 





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/download/&#34;&gt;Download section&lt;/a&gt;, and in our 




&lt;a href=&#34;https://github.com/eclipse/mosaic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;release-date&#34;&gt;Release Date&lt;/h3&gt;
&lt;p&gt;2023-10-06&lt;/p&gt;
&lt;h3 id=&#34;changelog&#34;&gt;Changelog&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[M+] MOSAIC now requires at least Java 11 Runtime Environment to be executed.
[M+] Improved MOSAIC Tutorials on eclipse.dev/mosaic and related applications.
[A+] Perception Module leaves experimental phase and is now available per default.
[A+] New perception modifiers model occlusion based on bounding boxes, and errors on heading and dimension of perceived objects.
[A+] The application API was extended to get access to the unit&#39;s logging directory (e.g. for data export).
[M+] Mapping of vehicle applications now follows a stochastic distribution per default instead of a repeating pattern (configurable).
[M-] Fixed that vehicle deceleration values were omitted in specific configuration setups.
[S+] Import of SUMO net files in Scenario-Convert supports almost any projection now (only UTM was supported). 
[S-] Fixed database type affinities to make scenario-database more robust.
[T+] Vehicles defined in integrated SUMO scenarios can now be mapped with complex application distributions.
[T+] Now supports SUMO 1.18.0
[X+] Path handling in Simulation-Runner is more robust now.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‚≠ê A huge thanks to all users who contributed to this release:





&lt;a href=&#34;https://github.com/FunKuchen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; FunKuchen&lt;/a&gt;,





&lt;a href=&#34;https://github.com/iwillitried&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; iwillitried &lt;/a&gt;,





&lt;a href=&#34;https://github.com/kschrab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; kschrab&lt;/a&gt;,





&lt;a href=&#34;https://github.com/philipstr01&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; philipstr01&lt;/a&gt;,





&lt;a href=&#34;https://github.com/schwepmo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; schwepmo&lt;/a&gt;, and





&lt;a href=&#34;https://github.com/rprotzmann&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; rprotzmann&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Changelog Legend&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[M]&lt;/code&gt; &lt;em&gt;Eclipse MOSAIC&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[X]&lt;/code&gt; &lt;em&gt;MOSAIC Extended&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[A]&lt;/code&gt; &lt;em&gt;Application simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[C]&lt;/code&gt; &lt;em&gt;Communication simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[E]&lt;/code&gt; &lt;em&gt;Environment simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[N]&lt;/code&gt; &lt;em&gt;Navigation component&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[S]&lt;/code&gt; &lt;em&gt;Scenario-convert&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[T]&lt;/code&gt; &lt;em&gt;Traffic simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[+/-]&lt;/code&gt; &lt;em&gt;new Feature/Bugfix&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Meet the MOSAIC developers at EclipseCon</title>
      <link>https://www.eclipse.dev/mosaic/post/eclipse-con-2023/</link>
      <pubDate>Wed, 06 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/eclipse-con-2023/</guid>
      <description>&lt;p&gt;&lt;strong&gt;From October 16 to 19 we will be present at EclipseCon 2023 in Ludwidgsburg, Germany. Meet us at the Community Day, watch our talk, and connect with the developers behind Eclipse MOSAIC.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;EclipseCon is the leading conference for developers, architects, and open source business leaders to learn about Eclipse technologies, share
best practices, and more. We as member of the 




&lt;a href=&#34;https://openmobility.eclipse.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;openMobility Interest Group&lt;/a&gt; will present our contributions and current works with Eclipse MOSAIC.&lt;/p&gt;
&lt;p&gt;Our activities at 




&lt;a href=&#34;https://www.eclipsecon.org/2023&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;EclipseCon&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Monday, October 16: 




&lt;a href=&#34;https://www.eclipsecon.org/2023/community-day&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Automotive &amp;amp; SDV Community Day&lt;/strong&gt;&lt;/a&gt; (09:00 - 17:30)&lt;/li&gt;
&lt;li&gt;Thursday, October 19: 




&lt;a href=&#34;https://www.eclipsecon.org/2023/sessions/leveraging-eclipse-sumo-and-eclipse-mosaic-unleashing-power-digital-twins-efficient&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Leveraging Eclipse SUMO and Eclipse MOSAIC: Unleashing the Power of Digital Twins for Efficient Urban Mobility Management in Berlin&lt;/strong&gt;&lt;/a&gt; (14:00)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See you in Ludwidgsburg! üöÄ&lt;/p&gt;















&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./featured.png&#34; &gt;


  &lt;img src=&#34;./featured.png&#34; alt=&#34;&#34; width=&#34;50%&#34; &gt;
&lt;/a&gt;



&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>2023 Spring Release of Eclipse MOSAIC</title>
      <link>https://www.eclipse.dev/mosaic/post/release-23-0/</link>
      <pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/release-23-0/</guid>
      <description>&lt;p&gt;&lt;strong&gt;The autumn release of Eclipse MOSAIC is here! The committer team from Fraunhofer FOKUS and DCAITI is proud to present Eclipse MOSAIC 23.0 to the open source community.
This new version improves the recently introduced perception facilities in the Application simulator and brings better handling of the traffic simulation SUMO.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can find the new version in our 





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/download/&#34;&gt;Download section&lt;/a&gt;, and in our 




&lt;a href=&#34;https://github.com/eclipse/mosaic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;release-date&#34;&gt;Release Date&lt;/h3&gt;
&lt;p&gt;2023-04-20&lt;/p&gt;
&lt;h3 id=&#34;changelog&#34;&gt;Changelog&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[A+] Perceived objects provide dimension information (length, width, height).
[A+] The perception module can now detect traffic lights and their current states.
[A+] Vehicles and other units are finally able to send V2X messages during their shutdown procedure.
[A-] Resolved issues in perception module, e.g., when multiple apps used perception modifiers simultaneously.
[M+] The RTI now detects the OS type of the local host by itself.
[M-] Fixed minor bugs in RTI, Logging, and JSON-Scheme files.
[S+] scenario-convert is now able to import building information to an existing scenario database.
[T+] Improved handling of vehicles which are teleported by SUMO.
[T+] Several data related to trains can now be read from SUMO.
[T+] Now supports SUMO 1.16.0
[X+] Introduced OpenDRIVE support for PHABMACS (Extended).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‚≠ê A huge thanks to all users who contributed to this release:





&lt;a href=&#34;https://github.com/fhlig&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; fhlig&lt;/a&gt;,





&lt;a href=&#34;https://github.com/FunKuchen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; FunKuchen&lt;/a&gt;,





&lt;a href=&#34;https://github.com/kschrab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; kschrab&lt;/a&gt;,





&lt;a href=&#34;https://github.com/schwepmo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; schwepmo&lt;/a&gt;,





&lt;a href=&#34;https://github.com/rprotzmann&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; rprotzmann&lt;/a&gt;, and





&lt;a href=&#34;https://github.com/thonag&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; thonag&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Changelog Legend&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[M]&lt;/code&gt; &lt;em&gt;Eclipse MOSAIC&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[X]&lt;/code&gt; &lt;em&gt;MOSAIC Extended&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[A]&lt;/code&gt; &lt;em&gt;Application simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[C]&lt;/code&gt; &lt;em&gt;Communication simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[E]&lt;/code&gt; &lt;em&gt;Environment simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[N]&lt;/code&gt; &lt;em&gt;Navigation component&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[S]&lt;/code&gt; &lt;em&gt;Scenario-convert&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[T]&lt;/code&gt; &lt;em&gt;Traffic simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[+/-]&lt;/code&gt; &lt;em&gt;new Feature/Bugfix&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2022 Autumn Release of Eclipse MOSAIC</title>
      <link>https://www.eclipse.dev/mosaic/post/release-22-1/</link>
      <pubDate>Tue, 18 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/release-22-1/</guid>
      <description>&lt;p&gt;&lt;strong&gt;The autumn release of Eclipse MOSAIC is here! The committer team from Fraunhofer FOKUS and DCAITI is proud to present Eclipse MOSAIC 22.1 to the open source community.
This new version extends the recently introduced perception facilities in the Application simulator and upgrades the ns-3 simulator coupling.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can find the new version in our 





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/download/&#34;&gt;Download section&lt;/a&gt;, and in our 




&lt;a href=&#34;https://github.com/eclipse/mosaic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;release-date&#34;&gt;Release Date&lt;/h3&gt;
&lt;p&gt;2022-10-19&lt;/p&gt;
&lt;h3 id=&#34;changelog&#34;&gt;Changelog&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[A+] Perception module is now working with viewing angles larger than 180 degrees.
[A+] Introducing perception modifiers, such as occlusion or simple error models.
[A+] Improved API of vehicle operating system; action methods (e.g., change speed) now accept nanoseconds.
[M+] Improved handling of priorities when processing time advance requests.
[M+] Allow parallel execution of federates based on same Docker image (e.g., when running simulations in parallel).
[M+] Added configuration option to configure decimal separator in file output generator.
[C+] Upgraded ns-3 federate to support ns3-36.1.
[C+] Improved default logging of OMNeT++ and ns-3 simulations to be less verbose.
[C-] Fixed a bug in OMneT++ federate using the wrong `omnetpp.ini`.
[S+] Added import of building information from OSM, e.g., for wall occlusion in perception module. 
[T+] Improved coupling of traffic simulator SUMO with vehicle simulators (e.g., PHABMACS or Carla).
[T+] Now supports SUMO 1.14.1
[T+] Released Berlin SUMO Traffic (BeST) scenario at https://github.com/mosaic-addons/best-scenario
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‚≠ê A huge thanks to all users who contributed to this release:





&lt;a href=&#34;https://github.com/fabmax&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; fabmax&lt;/a&gt;,





&lt;a href=&#34;https://github.com/felixlutz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; felixlutz&lt;/a&gt;,





&lt;a href=&#34;https://github.com/fhlig&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; fhlig&lt;/a&gt;,





&lt;a href=&#34;https://github.com/FunKuchen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; FunKuchen&lt;/a&gt;,





&lt;a href=&#34;https://github.com/kschrab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; kschrab&lt;/a&gt;,





&lt;a href=&#34;https://github.com/schwepmo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; schwepmo&lt;/a&gt;,





&lt;a href=&#34;https://github.com/realmaxneu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; realmaxneu&lt;/a&gt;,





&lt;a href=&#34;https://github.com/rprotzmann&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; rprotzmann&lt;/a&gt;, and





&lt;a href=&#34;https://github.com/thonag&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; thonag&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Changelog Legend&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[M]&lt;/code&gt; &lt;em&gt;Eclipse MOSAIC&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[X]&lt;/code&gt; &lt;em&gt;MOSAIC Extended&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[A]&lt;/code&gt; &lt;em&gt;Application simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[C]&lt;/code&gt; &lt;em&gt;Communication simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[E]&lt;/code&gt; &lt;em&gt;Environment simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[N]&lt;/code&gt; &lt;em&gt;Navigation component&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[S]&lt;/code&gt; &lt;em&gt;Scenario-convert&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[T]&lt;/code&gt; &lt;em&gt;Traffic simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[+/-]&lt;/code&gt; &lt;em&gt;new Feature/Bugfix&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Introducing the BeST Scenario</title>
      <link>https://www.eclipse.dev/mosaic/post/best-scenario-short/</link>
      <pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/best-scenario-short/</guid>
      <description>




  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/best-scenario-short/header_hu859dec11bd9ab75b8225e25d86466795_974599_2000x2000_fit_q90_lanczos.jpg&#34; &gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/best-scenario-short/header_hu859dec11bd9ab75b8225e25d86466795_974599_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;60%&#34; height=&#34;1064&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;We present a large-scale traffic scenario of Berlin for the Evaluation of Smart Mobility Applications. This scenario provides 24 hours of motorized private traffic, including almost 2,25 million individual trips. The Berlin SUMO Traffic (BeST) scenario is open-source and prepared to be compatible with Eclipse MOSAIC.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;During the last two years, we spend much time on preparing this scenario for our own purposes.
We now want to share the result with researchers worldwide to enable assessment of smart mobility applications on a large scale.
For that purpose, we offer a MOSAIC compatible simulation scenario which contains configuration files for a traffic scenario for Eclipse SUMO.
This scenario covers motorized private traffic for 24 hours in the area of Berlin.
With MOSAIC, vehicles can be equipped with any kind of application, including simulation of communication among vehicles or server applications to model ITS.&lt;/p&gt;
&lt;p&gt;We presented the scenario on 




&lt;a href=&#34;https://csum.civ.uth.gr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CSUM 2022&lt;/a&gt; (taking place 31 August - 2 September 2022) and also prepared a paper presenting our methodology on creating the scenario.
The paper will be published soon in the conference proceedings via Springer Link.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Our paper about the BeST scenario won the Best Paper / Young Researcher Award at CSUM 2022!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can freely use the scenario which is available on GitHub: 




&lt;a href=&#34;https://github.com/mosaic-addons/best-scenario&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; https://github.com/mosaic-addons/best-scenario&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Virtual Testing of Touring Solutions for Vehicle Fleets</title>
      <link>https://www.eclipse.dev/mosaic/post/tour-management/</link>
      <pubDate>Mon, 25 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/tour-management/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Courier-, Express- &amp;amp; Parcel-providers (CEP-Providers) play an evermore important role in the daily lives of many people. To
guarantee timely deliveries and customer satisfaction, these providers rely on sophisticated algorithms to manage the disposition of their
fleets. In the course of the eBaseCamp-project, Eclipse MOSAIC has been utilized and extended to model a delivery service leveraged by
e-mobility and a Base Camp infrastructure.&lt;/strong&gt;&lt;/p&gt;















&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./ebasecamp_system_overview.svg&#34; &gt;


  &lt;img src=&#34;./ebasecamp_system_overview.svg&#34; alt=&#34;&#34; width=&#34;75%&#34; &gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;The aim of the research project 




&lt;a href=&#34;https://www.digitale-technologien.de/DT/Redaktion/DE/Standardartikel/IKT-EM/IKT-Projekte/ikt-III-projekt-eBaseCamp.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eBaseCamp&lt;/a&gt; was to replace the emission- and fuel-hungry Diesel fleets of CEP-providers with
clean emissionless electric vehicles and evaluate the economical and ecological impact.
To achieve this goal a Base Camp infrastructure is proposed, providing parking spaces, charging spots, and further facilities for electric fleets.
To measure potential emission and fuel savings, an entire day of deliveries in Berlin was modeled,
complete with realistic background traffic, and configurable delivery positions &amp;amp; fleet sizes.
In a first step the logistic applications were developed and tested on an excerpt of the map covering Charlottenburg (district of Berlin).&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-left-osm-map-of-charlottenburg-right-sumo-simulation-at-800am-of-charlottenburg&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/tour-management/charlottenburg_combined_hufee6e8d88046ca53a5659a90c51234db_1402627_2000x2000_fit_q90_lanczos.jpg&#34; data-caption=&#34;Left: OSM-Map of Charlottenburg Right: SUMO Simulation at 8:00am of Charlottenburg&#34;&gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/tour-management/charlottenburg_combined_hufee6e8d88046ca53a5659a90c51234db_1402627_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;75%&#34; height=&#34;1200&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    &lt;strong&gt;Left&lt;/strong&gt;: OSM-Map of Charlottenburg &lt;strong&gt;Right&lt;/strong&gt;: SUMO Simulation at 8:00am of Charlottenburg
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Utilizing &lt;strong&gt;Eclipse MOSAIC&lt;/strong&gt;s Application Simulator a system has been developed, that allows for remote tour planning and vehicle routing
requests.
This system enables drivers to request new deliveries on demand while not having to worry about finding the fastest routes themselves.
On the server-side state-of-the-art libraries are used to solve Shortest Path and the Vehicle Routing Problem (VRP) to provide drivers with optimal tours.&lt;/p&gt;
&lt;h3 id=&#34;the-simulation-setup&#34;&gt;The Simulation Setup&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Infrastructure&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Initially, the infrastructure for the Base Camps and delivery bases had to be modeled.
We extended the road network with SUMO parking areas as shown in the picture below, which allows for variable locations
and easy integration with &lt;strong&gt;Eclipse MOSAIC&lt;/strong&gt;.
For each parking spot in the Base Camp a Charging Spot was configured using the 





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/emobility_simulator_charging/&#34;&gt;Charging Simulator (MOSAIC Extended)&lt;/a&gt;, which delivery vehicles can dock on to.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-left-modeled-base-camp-right-modeled-delivery-base&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/tour-management/basecamp_hu35996ea52cc3b8f14031f9e7e4a97a22_229864_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Left: Modeled Base Camp Right: Modeled Delivery Base&#34;&gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/tour-management/basecamp_hu35996ea52cc3b8f14031f9e7e4a97a22_229864_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;75%&#34; height=&#34;740&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    &lt;strong&gt;Left&lt;/strong&gt;: Modeled Base Camp &lt;strong&gt;Right&lt;/strong&gt;: Modeled Delivery Base
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Day Plans&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In a second step we analyzed the typical day plans of delivery drivers and evaluated how these will change with
the integration of a Base Camp Infrastructure (see image below).
Additionally, we developed a tool which uniformly distributes Delivery Stops with variable times in configured areas.
Together with configurable timings for loading and unloading and variable starting hours, the general evaluation setup was ready.&lt;/p&gt;















&lt;figure id=&#34;figure-left-classical-day-plan-of-delivery-drivers-right-day-plan-with-the-integration-of-a-base-camp-infrastructure&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./day_plans.svg&#34; data-caption=&#34;Left: Classical day plan of delivery drivers Right: day plan with the integration of a Base Camp Infrastructure&#34;&gt;


  &lt;img src=&#34;./day_plans.svg&#34; alt=&#34;&#34; width=&#34;75%&#34; &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    &lt;strong&gt;Left:&lt;/strong&gt; Classical day plan of delivery drivers &lt;strong&gt;Right:&lt;/strong&gt; day plan with the integration of a Base Camp Infrastructure
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Battery Simulator&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In order to achieve convincing results for the energy demand of electronic vehicles we revamped the






  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/emobility_simulator_battery/&#34;&gt;Battery Simulator (MOSAIC Extended)&lt;/a&gt;, introducing a new WLTC-validated
Lithium-Ion Battery Model and capabilities for DC-Charging.
Furthermore, we realistically modeled the Mercedes eSprinter for the &lt;strong&gt;Battery Simulator&lt;/strong&gt; to run the simulations with.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-comparison-of-the-soc-values-of-a-validated-battery-model-left-and-the-new-eclipse-mosaic-lithium-ion-battery-model-right&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/tour-management/battery_models_hua43c8868f8600358ef03ae318854d6cf_113472_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Comparison of the SOC-values of a validated Battery Model (left) and the new Eclipse MOSAIC Lithium-Ion Battery Model (right)&#34;&gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/tour-management/battery_models_hua43c8868f8600358ef03ae318854d6cf_113472_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;75%&#34; height=&#34;482&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Comparison of the SOC-values of a validated Battery Model (&lt;strong&gt;left&lt;/strong&gt;) and the new Eclipse MOSAIC Lithium-Ion Battery Model (&lt;strong&gt;right&lt;/strong&gt;)
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p style=&#34;font-size:9px&#34;&gt;[1] Han, Wang, Filev. ‚ÄûOptimized Design of Multi-Speed Transmissions for Battery Electric Vehicles‚Äù, 2019&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Touring&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Finally, with all prerequisites fulfilled implementation of the &lt;strong&gt;ITS&lt;/strong&gt;-Application could begin.
Vehicles will programmatically follow their day plans, with delivery stops and routes being requested from a remote server,
once the previous delivery is finished. This allows the Touring-Server to intelligently plan the execution of all existing stops.
Algorithmically this means that the Vehicle Routing Problem (VRP) has to be solved. The Server-Application has bindings for
the state-of-the-art libraries 




&lt;a href=&#34;https://jsprit.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;jsprit&lt;/a&gt; and 




&lt;a href=&#34;https://developers.google.com/optimization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OR-Tools&lt;/a&gt;, and can
be configured with one or the other.&lt;/p&gt;
&lt;p&gt;View the short video demonstration below to get an overview on the complete system in function!&lt;/p&gt;
&lt;video controls style=&#34;width:50%&#34;&gt;
  &lt;source src=&#34;https://owncloud.fokus.fraunhofer.de/index.php/s/SssOmFLtZhJkurI/download&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
&lt;h3 id=&#34;whats-next&#34;&gt;What&amp;rsquo;s next?&lt;/h3&gt;
&lt;p&gt;Alongside the touring solutions, we developed a Floating Car Data (FCD) based system for Traffic State Estimation.
This system enables vehicles of the fleet to periodically send data including their positions, speeds and heading
to a central server. The server uses the combined FCD-packages to estimate the current traffic state in an
edge-based manner using a clustering approach.&lt;/p&gt;
&lt;p&gt;In the future we aim to couple our solutions to work hand-in-hand by considering the traffic state for tour planning and also
using tour planning to provide better traffic state estimation, by allowing small detours to improve data quality for less frequented
roads.
We call this approach Data-Routing and hope to enable stable traffic state estimation while lowering the rate of equipped vehicles.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




&lt;a href=&#34;https://www.digitale-technologien.de/DT/Redaktion/DE/Standardartikel/IKT-EM/IKT-Projekte/ikt-III-projekt-eBaseCamp.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;ebasecamp.png&#34; alt=&#34;eBaseCamp&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This work was part of the 




&lt;a href=&#34;https://www.digitale-technologien.de/DT/Redaktion/DE/Standardartikel/IKT-EM/IKT-Projekte/ikt-III-projekt-eBaseCamp.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eBaseCamp&lt;/a&gt; project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2022 Spring Release of Eclipse MOSAIC</title>
      <link>https://www.eclipse.dev/mosaic/post/release-22-0/</link>
      <pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/release-22-0/</guid>
      <description>&lt;p&gt;&lt;strong&gt;The spring release of Eclipse MOSAIC has arrived! The committer team from Fraunhofer FOKUS and DCAITI is proud to present Eclipse MOSAIC 22.0 to the open source community.
This new version introduces perception facilities to the Application simulator and improved the integration of the traffic simulator SUMO.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can find the new version in our 





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/download/&#34;&gt;Download section&lt;/a&gt;, and in our 




&lt;a href=&#34;https://github.com/eclipse/mosaic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;release-date&#34;&gt;Release Date&lt;/h3&gt;
&lt;p&gt;2022-05-04&lt;/p&gt;
&lt;h3 id=&#34;changelog&#34;&gt;Changelog&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[A+] A perception module has been added. Vehicles can now perceive other vehicles in their field of view.
[A+] Adjusted tutorial application WeatherServerApp to use server entity.
[A+] Improved map matching of start and end points for routing.
[A-] Fixed a bug in payload deserialization.
[M+] Added Quad-tree and Grid index for fast search of surrounding entities.
[M+] Allow configuration of a connection id as departure position of a vehicle.
[M-] Refactored and unified matrix implementations in mosaic-utils.
[T+] Improved LibSumo coupling interface.
[T+] Enhanced interface to SUMO to use context subscriptions in certain situations.
[T+] Now supports SUMO 1.13.0
[T-] Fixed wrong position problem of parked vehicles.
[X+] Introduced new physics engine in PHABMACS based on PhysX (Extended).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‚≠ê A huge thanks to all contributors who participated in this release:





&lt;a href=&#34;https://github.com/fabmax&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; fabmax&lt;/a&gt;,





&lt;a href=&#34;https://github.com/felixlutz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; felixlutz&lt;/a&gt;,





&lt;a href=&#34;https://github.com/kschrab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; kschrab&lt;/a&gt;,





&lt;a href=&#34;https://github.com/ninabohm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; ninabohm&lt;/a&gt;,





&lt;a href=&#34;https://github.com/schwepmo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; schwepmo&lt;/a&gt;, and





&lt;a href=&#34;https://github.com/rprotzmann&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; rprotzmann&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Changelog Legend&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[M]&lt;/code&gt; &lt;em&gt;Eclipse MOSAIC&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[X]&lt;/code&gt; &lt;em&gt;MOSAIC Extended&lt;/em&gt;\
&lt;code&gt;[A]&lt;/code&gt; &lt;em&gt;Application simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[C]&lt;/code&gt; &lt;em&gt;Communication simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[E]&lt;/code&gt; &lt;em&gt;Environment simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[N]&lt;/code&gt; &lt;em&gt;Navigation component&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[S]&lt;/code&gt; &lt;em&gt;Scenario-convert&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[T]&lt;/code&gt; &lt;em&gt;Traffic simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[+/-]&lt;/code&gt; &lt;em&gt;new Feature/Bugfix&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Evaluating Cooperative LiDAR Data Fusion for VRU Safety with MOSAIC Extended</title>
      <link>https://www.eclipse.dev/mosaic/post/cooperative-lidar-vru-safety/</link>
      <pubDate>Mon, 24 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/cooperative-lidar-vru-safety/</guid>
      <description>&lt;p&gt;&lt;strong&gt;People traveling by bike, on foot or e-scooters are little protected in the event of a collision and therefore known as Vulnerable Road Users (VRUs). Modern sensor systems for automated driving such as LiDAR are able to detect VRUs, thus facilitate warnings and safety. Yet, in certain situations, local blind spots could occur. Data fusion from different vehicles could solve this issue - as it is shown with PHABMACS and MOSAIC Extended.&lt;/strong&gt;&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/cooperative-lidar-vru-safety/header_hu96876ddb8b25fac64874ea85d049bd00_928574_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/cooperative-lidar-vru-safety/header_hu96876ddb8b25fac64874ea85d049bd00_928574_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;70%&#34; height=&#34;795&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;During the research project &lt;strong&gt;




&lt;a href=&#34;https://reallab-hamburg.de/projekte/vernetzte-vulnerable-road-users/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RealLabor Hamburg&lt;/a&gt;&lt;/strong&gt;, we used MOSAIC to create a complex traffic situation for investigating the general benefit of LiDAR based object detection and the effectiveness of merging the LiDAR sensor data (point clouds) from multiple vehicles before applying object detection. In this case, the LiDAR data would not be processed locally on the vehicles but communicated to a server (possibly in the Mobile Edge Cloud) and processed there - accordingly it results in a Cooperative LiDAR Data Fusion.&lt;/p&gt;
&lt;h2 id=&#34;scenario-for-data-collection&#34;&gt;Scenario for Data Collection&lt;/h2&gt;
&lt;p&gt;As a first step, we set up a simulation scenario at the Sievekingplatz in Hamburg.
At the chosen road section, complicated traffic situations can arise due to the multi-lane road, the parallel bike lane, and the bus stop.
To simulate such a situation, we added a halting bus, a bike riding along the bike lane, and three passenger cars driving in a row.
With the &lt;strong&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/application_mapping/&#34;&gt;Mapping&lt;/a&gt;&lt;/strong&gt; configuration file, the vehicles are timed such that the second vehicle in the row can not perceive the bike when passing the bus, even in the safety-relevant close range.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-frame-of-the-sievekingplatz-scenario-the-trajectories-of-the-vehicles-are-marked-in-yellow&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/cooperative-lidar-vru-safety/scenario_screenshot_huba8ebc700f8573edde0ea3a9a508d1cb_464271_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Frame of the Sievekingplatz scenario. The trajectories of the vehicles are marked in yellow.&#34;&gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/cooperative-lidar-vru-safety/scenario_screenshot_huba8ebc700f8573edde0ea3a9a508d1cb_464271_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;80%&#34; height=&#34;426&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    Frame of the Sievekingplatz scenario. The trajectories of the vehicles are marked in yellow.
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;The simulation of LiDAR sensors is implemented in the &lt;strong&gt;PHABMACS&lt;/strong&gt; vehicle simulator, which is integrated in &lt;strong&gt;MOSAIC Extended&lt;/strong&gt;.
With the &lt;code&gt;phabmacs_config.json&lt;/code&gt; file it is possible to configure LiDAR sensors according to real products. In this case we configured it according to the Velodyne HDL-64E.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/application_simulator/&#34;&gt;Application Simulator&lt;/a&gt;&lt;/strong&gt;, each of the passenger cars is equipped with a LiDAR sensor which scans the environment and creates a 3D point cloud at a rate of 10 Hz.
To pool the LiDAR data from the passenger vehicles together at a server, we mapped a &lt;code&gt;LidarTransmissionApp&lt;/code&gt; on each vehicle, forwarding the LiDAR point cloud to the server, using the &lt;code&gt;PointCloudMessages&lt;/code&gt;.
Additionally, all simulated vehicles (cars, bus and bike) are mapped with a &lt;code&gt;ReportingApp&lt;/code&gt;, using the &lt;code&gt;ReportMessages&lt;/code&gt; to report vehicle information such as e.g., position and heading. These data are the ground truth for original location information, used in the later accuracy comparison.
On the server, a &lt;code&gt;DataManagementApp&lt;/code&gt; handles all received messages for the cooperative data fusion and exports data to log files, using the &lt;strong&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/visualization/filevis/&#34;&gt;Output Generator&lt;/a&gt;&lt;/strong&gt;.
The &lt;strong&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/network_simulator_cell/&#34;&gt;Cell Simulator&lt;/a&gt;&lt;/strong&gt; models the message transmission between the mobile entities and the server. An overview of all components can be seen below.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-scenario-components-overview&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/cooperative-lidar-vru-safety/scenario_overview_hude024dadbf4b3a5d490057146ad8304b_45033_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Scenario components overview&#34;&gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/cooperative-lidar-vru-safety/scenario_overview_hude024dadbf4b3a5d490057146ad8304b_45033_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;80%&#34; height=&#34;458&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    Scenario components overview
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h2 id=&#34;evaluation-of-lidar-data-processing&#34;&gt;Evaluation of LiDAR Data Processing&lt;/h2&gt;
&lt;p&gt;Based on the data collected from the simulation, we evaluated the effectiveness of merging sensor data before object detection.
We specifically focused on the detectability of the bike based on the point cloud data.
For this purpose, we estimated object detection results by filtering the LiDAR hits on the bike, using locational vehicle data gained from the &lt;code&gt;ReportMessages&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In FIGURE 3, the number of LiDAR hits on the bike at each sampling step are displayed.
As there are always some LiDAR hits, we can conclude that at all times the bike is visible from at least one perspective.
Though at certain frames some passenger cars could not perceive the bike, as it was occluded by the bus from their perspective.
Especially when &lt;code&gt;car_2&lt;/code&gt; is passing the bike, there are some frames (~16.8-17.8s) at which the general visibility of the bike is very limited.
In these frames an object detection could profit a lot from merging the individual point clouds, as it would increase the overall amount of LiDAR hits and therefore the detection of an object could be more likely.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-the-total-amount-of-lidar-hits-on-the-car-from-each-lidar-and-the-sum-of-all-lidar-hits&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/cooperative-lidar-vru-safety/LidarHits_huf4cfe39e38ce308d65f0c0bd8a082301_71957_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;The total amount of LiDAR hits on the car from each LiDAR and the sum of all LiDAR hits.&#34;&gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/cooperative-lidar-vru-safety/LidarHits_huf4cfe39e38ce308d65f0c0bd8a082301_71957_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;46%&#34; height=&#34;480&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    The total amount of LiDAR hits on the car from each LiDAR and the sum of all LiDAR hits.
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;To further evaluate the merging of point clouds we compared it with the merging of objects.
For the &lt;em&gt;PointCloudMerge&lt;/em&gt;, the latest point cloud from all vehicles with a LiDAR sensor are unified, resulting in one large global point cloud. This point cloud is then used to derive a bounding box for the bike.
For the &lt;em&gt;ObjectMerge&lt;/em&gt; a bounding box for each individual point cloud is derived. From all these bounding boxes, the one which is dimensionally most similar to the actual bounding box of the bike, is selected as final result.
To compare the results of both processing methods the &lt;em&gt;Bounding Box RMSE&lt;/em&gt; was used as a metric.
This metric represents the relation between the bounding box calculated from the point clouds and the actual bounding box of the bike, considering width and length of the bounding boxes.
A value of &lt;code&gt;0.0&lt;/code&gt; corresponds to no error and therefore a perfect match of the bounding boxes.&lt;/p&gt;
&lt;p&gt;In FIGURE 4 the results of both merging methods can be seen.
The results show that the bounding boxes are more accurate in many time steps when applying the &lt;em&gt;PointCloudMerge&lt;/em&gt; method.
Also, some peaks in the metric observable with the &lt;em&gt;ObjectMerge&lt;/em&gt; method could be averted.
The often more accurate bounding boxes with &lt;em&gt;PointCloudMerge&lt;/em&gt; could lead to an overall more stable object detection and more accurate labeling, which is important to correctly estimate behavior of objects in an autonomous driving context.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure--comparison-of-different-data-merging-methods-with-the-boundingbox-rmse-metric&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/cooperative-lidar-vru-safety/PointCloudMerge_vs_ObjectMerge_hue0c3c11dd13aa5205121fc5b5b78d64a_63185_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;: Comparison of different data merging methods with the BoundingBox RMSE metric.&#34;&gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/cooperative-lidar-vru-safety/PointCloudMerge_vs_ObjectMerge_hue0c3c11dd13aa5205121fc5b5b78d64a_63185_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;46%&#34; height=&#34;480&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    : Comparison of different data merging methods with the &lt;em&gt;BoundingBox RMSE&lt;/em&gt; metric.
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;We created a complex traffic situation collecting LiDAR sensor data for the preliminary evaluation of a system for merging 3D point clouds before applying object detection.&lt;/p&gt;
&lt;p&gt;MOSAICs &lt;strong&gt;Multi-Domain&lt;/strong&gt; aspect was utilized as the evaluated system including moving vehicles, a bus and a bike, dedicated applications for reporting and data processing, as well as the communication link for data transmission was modelled with the simulators PHABMACS, Application Simulator and Cell Simulator. Especially PHABMACS can model high-resolution LiDAR sensors and precise driving maneuvers - just according to MOSAICs &lt;strong&gt;Multi-Scale&lt;/strong&gt; aspect. On top, the Output Generator supported with formatted data recording for post-processing of simulation results.&lt;/p&gt;
&lt;p&gt;The results show that merging point clouds is indeed a processing method for LiDAR data worth to investigate further, as it could increase the likelihood of detecting an object and increase the accuracy of the labeling.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Further information about RealLabHH and the use case of protecting VRUs: &lt;a href=&#34;https://reallab-hamburg.de/projekte/vernetzte-vulnerable-road-users/&#34;&gt;https://reallab-hamburg.de/projekte/vernetzte-vulnerable-road-users/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RealLabHH was completed in December 2021 after 1.5 years. It was funded by the German Federal Ministry of Transport and Digital Infrastructure (BMVI).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2021 Autumn Release of Eclipse MOSAIC</title>
      <link>https://www.eclipse.dev/mosaic/post/release-21-1/</link>
      <pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/release-21-1/</guid>
      <description>&lt;p&gt;&lt;strong&gt;A new release of Eclipse MOSAIC is here! The committer team from Fraunhofer FOKUS and DCAITI is proud to present Eclipse MOSAIC 21.1 to the open source community.
This new version focuses on a better usage of communication simulators SNS, OMNeT++, and ns-3, and allows to use a much faster integration of the traffic simulator SUMO.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can find the new version in our 





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/download/&#34;&gt;Download section&lt;/a&gt;, and in our 




&lt;a href=&#34;https://github.com/eclipse/mosaic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;release-date&#34;&gt;Release Date&lt;/h3&gt;
&lt;p&gt;2021-10-07&lt;/p&gt;
&lt;h3 id=&#34;changelog&#34;&gt;Changelog&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[A+] Server units are now able to access the central navigation component for routing purposes.
[A+] The stop mode has been revised, allowing vehicles to park in parking areas (SUMO).
[M-] WebVisualizer now removes vehicles correctly and shows V2X indicators longer.
[M-] Fixed a bug in matrix mappers configuration in mapping.
[C+] Upgraded ns-3 federate to support ns3-34.
[C+] Major improvement of logging for SNS, OMNeT++, and ns-3.
[C-] Fixed a bug in polygon intersection test used by reachability check in mosaic-cell.
[S+] Improved Scenario-convert for faster and more reliable import of SUMO net files.
[T+] You can now use LibSumo as an alternative to TraCI (experimental).
[T+] Now supports SUMO 1.10.0
[X+] Major overhaul of battery and charging station simulation (Extended).
[X+] Added new consumption model for Li-Ion based batteries (Extended).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‚≠ê A huge thanks to all contributors who participated in this release:





&lt;a href=&#34;https://github.com/felixlutz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; felixlutz&lt;/a&gt;,





&lt;a href=&#34;https://github.com/realmaxneu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; realmaxneu&lt;/a&gt;,





&lt;a href=&#34;https://github.com/fhilg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; fhilg&lt;/a&gt;,





&lt;a href=&#34;https://github.com/kschrab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; kschrab&lt;/a&gt;,





&lt;a href=&#34;https://github.com/paguos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; paguos&lt;/a&gt;,





&lt;a href=&#34;https://github.com/schwepmo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; schwepmo&lt;/a&gt;, and





&lt;a href=&#34;https://github.com/vogtfa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; vogtva&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Changelog Legend&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[M]&lt;/code&gt; &lt;em&gt;Eclipse MOSAIC&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[X]&lt;/code&gt; &lt;em&gt;MOSAIC Extended&lt;/em&gt;\
&lt;code&gt;[A]&lt;/code&gt; &lt;em&gt;Application simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[C]&lt;/code&gt; &lt;em&gt;Communication simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[E]&lt;/code&gt; &lt;em&gt;Environment simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[N]&lt;/code&gt; &lt;em&gt;Navigation component&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[S]&lt;/code&gt; &lt;em&gt;Scenario-convert&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[T]&lt;/code&gt; &lt;em&gt;Traffic simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[+/-]&lt;/code&gt; &lt;em&gt;new Feature/Bugfix&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Testing Remote-Operated Driving virtually with Eclipse MOSAIC</title>
      <link>https://www.eclipse.dev/mosaic/post/remote-operated-driving/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/remote-operated-driving/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;overview.png&#34; alt=&#34;alternative text for search engines&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Remote-Operated Driving&lt;/strong&gt; is the bridge technology from human towards fully automated driving.
In situations outside the driving domain of a highly-automated vehicle, e.g. if data is missing, or the autonomous function is unsure to
make a certain decision, remote-operation is the key. Also, in other use-cases, remote-operated driving is a helpful
technique, e.g. for driving electric car-sharing vehicles to their charging stations, or maneuvering vehicles remotely through
a parking garage.&lt;/p&gt;
&lt;p&gt;In all those use-cases, a human operator would &amp;ldquo;steer&amp;rdquo; the vehicle remotely. All sensor information would be sent over the 5G network
to the operator who can then decide on the action or trajectory the vehicle should follow. The information the operator
receives could be any sensor data from the vehicle, such as camera data, LiDAR data,
or already compiled information like detected objects and free space.
With Mobile Edge Computing and sensor fusion, the information could be enriched by other vehicles or stationary sensors.&lt;/p&gt;
&lt;p&gt;Virtual Testing with MOSAIC helps to dive deeper into this topic. This study bases on LiDAR data for presentation of the operator view,
which allows selecting different viewing angles as well as sensor fusion of different perspectives from other vehicles for a
holistic environment model. The final result can be seen in the video below.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/KC5ZTy1CDz8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;a title=&#34;Watch &#39;Simulating Remote Operated Driving | FOKUS Smart Mobility&#39; on YouTube&#34; href=&#34;https://www.youtube.com/watch?v=KC5ZTy1CDz8&#34;&gt;
&lt;i class=&#34;fab fa-youtube&#34;&gt;&lt;/i&gt; Watch &amp;ldquo;Simulating Remote Operated Driving | FOKUS Smart Mobility&amp;rdquo; on YouTube
&lt;/a&gt;&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;Eclipse MOSAIC has been used to couple the vehicle simulator PHABMACS with the MOSAIC Application
simulator, in which a custom application has been deployed providing the operator view.
The vehicle simulator PHABMACS is responsible for vehicle dynamics and sensor data, in this case LiDAR data.
The message exchange of LiDAR as well as vehicle control data has been simulated by integrating the MOSAIC Cell simulator.
In this way, we could analyze the influence of communication properties, e.g. latencies and
different connection qualities such as low capacities or packet losses, on the application.
For the hybrid test setup with virtual world and real application for the human operators,
the whole simulation has to run in real time, which is possible with Eclipse MOSAIC (see parameter &lt;code&gt;--realtime-brake 1&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;overview_mosaic.png&#34; alt=&#34;Tele-Operated Driving Simulation with Eclipse MOSAIC&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2021 Spring Release of Eclipse MOSAIC</title>
      <link>https://www.eclipse.dev/mosaic/post/release-21-0/</link>
      <pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/release-21-0/</guid>
      <description>&lt;p&gt;&lt;strong&gt;The spring release has arrived! The committer team from Fraunhofer FOKUS and DCAITI is proud to present Eclipse MOSAIC 21.0 to the open source community.
This new version focuses on a much better integration of SUMO configurations, and introduces a new Server entity to the Application Simulator.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can find the new version in our 





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/download/&#34;&gt;Download section&lt;/a&gt;, and in our 




&lt;a href=&#34;https://github.com/eclipse/mosaic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please note our 





  
  

&lt;a href=&#34;#migration-guide&#34;&gt;Migration Guide&lt;/a&gt; below when updating Eclipse MOSAIC.&lt;/p&gt;
&lt;h3 id=&#34;release-date&#34;&gt;Release Date&lt;/h3&gt;
&lt;p&gt;2021-03-10&lt;/p&gt;
&lt;h3 id=&#34;changelog&#34;&gt;Changelog&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[T+] It is now possible to map applications on vehicles which are defined in SUMO configurations. 
[T+] Simplified the internal road network model for a better integration of existing SUMO scenarios.
[C+] Implemented much faster reachability check in SNS.
[A+] Added the possibility to map an application on all existing traffic lights at once.   
[A+] New simulation entity for Server applications. 
[M-] Fixes a minor bug in the contains check of polygons
[M+] Added complete documentation for most configuration files to the website.
[M+] Added a new tutorial showcasing the integration of existing SUMO configurations.
[T+] Now supports SUMO 1.8.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‚≠ê A huge thanks to all contributors who participated in this release:





&lt;a href=&#34;https://github.com/fabmax&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; fabmax&lt;/a&gt;,





&lt;a href=&#34;https://github.com/kschrab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; kschrab&lt;/a&gt;,





&lt;a href=&#34;https://github.com/paguos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; paguos&lt;/a&gt;,





&lt;a href=&#34;https://github.com/schwepmo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; schwepmo&lt;/a&gt;, and





&lt;a href=&#34;https://github.com/vogtfa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;i class=&#34;fab fa-github&#34;&gt;&lt;/i&gt; vogtva&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;migration-guide&#34;&gt;Migration Guide&lt;/h3&gt;
&lt;p&gt;With the improved integration of SUMO scenarios it is now possible to create a MOSAIC scenario based on any
existing SUMO scenario (&lt;code&gt;*.sumocfg&lt;/code&gt;, &lt;code&gt;*.net.xml&lt;/code&gt;, and &lt;code&gt;*.rou.xml&lt;/code&gt;). To achieve, we had to adjust our
road network model in a way that it matches better the network representation of SUMO.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This adjustment, however, affects all existing MOSAIC scenarios.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The following steps should be followed if you want to migrate your already existing MOSAIC scenario to the latest version:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the newest version of 




&lt;a href=&#34;https://www.dcaiti.tu-berlin.de/research/simulation/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;scenario-convert&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;scenario-convert --update -d path/to/database.db&lt;/code&gt; to update the database file of your scenario.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;scenario-convert --db2sumo -d path/to/database.db&lt;/code&gt; to generate a new SUMO network.&lt;/li&gt;
&lt;li&gt;Move the generated &lt;code&gt;*.net.xml&lt;/code&gt; file to the &lt;code&gt;sumo&lt;/code&gt; directory of your scenario and replace the existing one with it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you need further advice, please head over to our all new 




&lt;a href=&#34;https://github.com/eclipse/mosaic/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;discussion board&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Changelog Legend&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[M]&lt;/code&gt; &lt;em&gt;Eclipse MOSAIC&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[A]&lt;/code&gt; &lt;em&gt;Application simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[B]&lt;/code&gt; &lt;em&gt;Battery simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[C]&lt;/code&gt; &lt;em&gt;Communication simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[E]&lt;/code&gt; &lt;em&gt;Environment simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[N]&lt;/code&gt; &lt;em&gt;Navigation component&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[S]&lt;/code&gt; &lt;em&gt;Scenario-convert&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[T]&lt;/code&gt; &lt;em&gt;Traffic simulator&lt;/em&gt;&lt;br&gt;
&lt;code&gt;[+/-]&lt;/code&gt; &lt;em&gt;new Feature/Bugfix&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Studying Traffic Control Algorithms in MOSAIC</title>
      <link>https://www.eclipse.dev/mosaic/post/traffic-control/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/traffic-control/</guid>
      <description>&lt;p&gt;&lt;strong&gt;The simulative investigation of communication-based Traffic Management solutions requires combining models from different domains. Eclipse MOSAIC suits very well for this purpose as it couples multiple simulators to model vehicle movement pattern, infrastructure sensors, (variable) traffic signs, as well as different communication links (ITS-G5, 4G/5G) between vehicles and backends, and the application logic in entities like vehicles and a Traffic Management Center.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;featured.png&#34; alt=&#34;Inframix System Overview&#34;&gt;&lt;/p&gt;
&lt;p&gt;In a recent study, we analyzed future traffic estimation and control algorithms towards their use on highways
with special focus on mixed traffic of conventional vehicles, connected vehicles, and autonomous vehicles. Connected
vehicles share telematic information with a Traffic Management Center (TMC) which can then estimate the traffic state
and initiate control mechanisms to improve traffic efficiency either via variable message signs as part of the infrastructure, or via V2X communication directly addressing connected vehicles in order to share
speed and lane change advices with the vehicles on the road (e.g. via ETSI IVI message). In a further step,
dynamic lane assignments have been established, which dedicate lanes to autonomous vehicles only to enable
efficient platooning maneuvers. The individual highlights of Eclipse MOSAIC for simulating such a traffic management system are visualized in the video.&lt;/p&gt;
&lt;video controls style=&#34;width:55%&#34;&gt;
  &lt;source src=&#34;https://owncloud.fokus.fraunhofer.de/index.php/s/LclLTzGQ0BdziIn/download&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
&lt;p&gt;With &lt;strong&gt;Eclipse MOSAIC&lt;/strong&gt; this system has been modelled and simulated with all its various aspects in order to analyze
efficiency improvements of such estimation and control algorithms. As traffic simulator, we employed
&lt;strong&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/traffic_simulator_sumo/&#34;&gt;Eclipse SUMO&lt;/a&gt;&lt;/strong&gt;, which already provides a basic
model for variable &lt;em&gt;speed&lt;/em&gt; signs. However, the preferred 





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/vms_simulator/&#34;&gt;MOSAIC VMS Simulator&lt;/a&gt;
realizes a more flexible concept with the dynamic control of the VMS during simulation runtime, including &lt;em&gt;arbitrary sign semantics&lt;/em&gt; additional
to &lt;em&gt;speed&lt;/em&gt; and featuring a visibility range. The interplay of information from infrastructure elements as well as communicated information
has been modelled in detail with applications covering realistic behavior of human drivers and autonomous vehicles. Additionally,
real estimation and control algorithms from external suppliers have been integrated into the simulation to
provide a software-in-the-loop environment. The &lt;strong&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/application_mapping/&#34;&gt;MOSAIC Mapping&lt;/a&gt;&lt;/strong&gt;
allowed for a comprehensive configuration of the different application components to the simulated entities (variously equipped vehicles, RSUs and a TMC cloud server).&lt;/p&gt;
&lt;p&gt;The final result was a complex simulation scenario for Eclipse MOSAIC,
including a calibrated traffic model, various application and behavior models for automated, connected and conventional vehicles,
different communication links via ITS-G5 and cellular communication, infrastructure models for sensors and variable message signs, and
a new evaluation component in order to gain statistics out of a simulation.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Requirement&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/traffic_simulator_sumo/&#34;&gt;SUMO&lt;/a&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/application_simulator/&#34;&gt;MOSAIC Application&lt;/a&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/network_simulator_cell/&#34;&gt;MOSAIC Cell&lt;/a&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/network_simulator_sns/&#34;&gt;MOSAIC SNS&lt;/a&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/vms_simulator/&#34;&gt;MOSAIC VMS&lt;/a&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/visualization/statistics/&#34;&gt;MOSAIC Output&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Simulate Vehicle Traffic on Highways&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Measure Traffic Properties (Flow, Density)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Control Traffic dynamically via VMS&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;(X)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Exchange V2X Messages via ITS-G5 and 4G/5G&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Include Vehicle Functions which react on IVIM&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Model Traffic Management Center Facilities&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Integrate real TMC algorithms in Simulation&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Include Roadside Units with custom Functionality&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Generate aggregated Statistics from the Simulation&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Generated Detailed Simulation Logs&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;(X)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;the-simulation-setup&#34;&gt;The Simulation Setup&lt;/h3&gt;
&lt;p&gt;The traffic model in this scenario has been created using real toll-data for the highway AP7 in northern Spain, provided
by the Spanish toll road management (




&lt;a href=&#34;https://www.abertis.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Abertis Infraestructuras, S.A.&lt;/a&gt;). Based on this data, traffic has been
generated in Eclipse SUMO and calibrated in a way,
that the simulated traffic resembles the original toll data as close as possible. This procedure has been done for the
complete highway AP7 and resulted in more than 500.000 vehicles per day in the simulation. However, it would not make real sense
to analyze a whole highway stretch, as the control algorithms under test apply very local changes. Therefore, we decided to extract
a reduced traffic scenario from the calibrated one by measuring the vehicle movements within a smaller area only. Based on those
measurements we were able to create a realistic traffic model on a stretch of 25 kilometers length near Girona.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-the-test-site-modelled-in-eclipse-mosaic&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/traffic-control/test-site_huc9e68466259c66b25b58dd1cb0735621_545645_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;The test site modelled in Eclipse MOSAIC&#34;&gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/traffic-control/test-site_huc9e68466259c66b25b58dd1cb0735621_545645_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;45%&#34; height=&#34;551&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    The test site modelled in Eclipse MOSAIC
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;For modelling the infrastructure, the highway has been divided into so-called segments. Each segment, roughly 500m in length, contains
spot sensors at the entry of each segment to measure traffic flow, lane area detectors which model cameras to measure traffic density, and
Variable Message Signs (VMS) displaying speed limits and lane assignments. Modelling VMS was achieved by the new
simulator &lt;strong&gt;MOSAIC VMS&lt;/strong&gt;, which let vehicles &amp;ldquo;see&amp;rdquo; oncoming traffic signs showing speed limits or lane assignments. An additional
behavior model for vehicles implemented in the MOSAIC Application Simulator could react on those instructions accordingly.&lt;/p&gt;
&lt;p&gt;The segmentation of the highway was very important for the traffic estimation and control algorithms which have been integrated into the scenario. Those
algorithms, provided by the 




&lt;a href=&#34;https://www.pem.tuc.gr/index.php?id=5257&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Technical University of Crete&lt;/a&gt;, can
estimate the traffic volume on highways using traditional sensors, but also by receiving CAM messages of connected vehicles. Based on the
traffic estimation, additional algorithms can control the traffic by setting speed limits on VMS, or by sending V2X messages (e.g. ETSI IVI messages)
with speed recommendations or lane change advices to individual vehicles. The control algorithms were written in C++ and have already been used in real
traffic management centers. For this study, we integrated them into the 





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/application_simulator/&#34;&gt;MOSAIC Application&lt;/a&gt;
Simulator using the Java Native Interface (JNI).&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-integration-of-traffic-control-algorithms-into-mosaic-application-using-jni&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/traffic-control/teac-jni_hu8eedbfac73273995571fbc96a05c851b_31297_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Integration of Traffic Control Algorithms into MOSAIC Application using JNI&#34;&gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/traffic-control/teac-jni_hu8eedbfac73273995571fbc96a05c851b_31297_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;45%&#34; height=&#34;632&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    Integration of Traffic Control Algorithms into MOSAIC Application using JNI
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;The estimation algorithms rely on information from vehicles and control algorithms are able to send back advices. Therefore, communication
links are required to exchange V2X messages. To achieve this, two separate communications links have been modelled by integrating
the &lt;strong&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/network_simulator_sns/&#34;&gt;MOSAIC Simple Network Simulator&lt;/a&gt;&lt;/strong&gt; for ITS-G5 communication,
and the  &lt;strong&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/network_simulator_cell/&#34;&gt;MOSAIC Cell Simulator&lt;/a&gt;&lt;/strong&gt; for cellular communication (e.g. 5G or LTE-V2X).
In the former case, vehicles exchanged message with Road Side Units along the road, which then forwarded the information to the Traffic Management
Center (TMC). In the latter case, vehicles were directly connected to the TMC.&lt;/p&gt;
&lt;p&gt;Finally, application models for connected and automated vehicles have been integrated by using the
&lt;strong&gt;





  
  

    

    
    
      
      
      
      
    

    
    

    
  

&lt;a href=&#34;https://www.eclipse.dev/mosaic/mosaic/docs/simulators/application_simulator/&#34;&gt;MOSAIC Application Simulator&lt;/a&gt;&lt;/strong&gt;. With the help of these applications
vehicles could react on advices sent by the TMC. Depending on the SAE level of the vehicle in the simulation, the vehicles
would execute a certain advice immediately after some safety checks (fully automated vehicle) or with a certain delay
(connected vehicle with a human driver reacting on a lane-change advice).&lt;/p&gt;
&lt;h3 id=&#34;evaluations&#34;&gt;Evaluations&lt;/h3&gt;
&lt;p&gt;In a first study, we took a closer look onto the main traffic flow control (MTFC) in general. This algorithm measures the traffic volume
on the highway and adjusts the speed limits shown on VMS based on the current flow and density. In many cases, traffic collapses
near on-ramps when traffic flow on the highway is already high and additional vehicles are entering, resulting in a capacity drop
on the highway and thereby congestion further upstream. To avoid this from happening, the controller reduces the average speed
of the main flow resulting in more capacity available at the bottleneck. This effect could be shown in MOSAIC with the setup described
above as well, as shown in the Figure below. Here you can see, that the congestion which arises at the bottleneck near segment 30 can
be reduced by activating the controller.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-speed-over-time-on-the-highway-left-no-control-enabled-right-control-algorithm-active&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/traffic-control/teac-no-control-vs-control_hu3f36ae42f5012c9c73c42f4df7e25b4b_269788_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Speed over time on the highway. Left no control enabled, right control algorithm active.&#34;&gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/traffic-control/teac-no-control-vs-control_hu3f36ae42f5012c9c73c42f4df7e25b4b_269788_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;70%&#34; height=&#34;400&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    Speed over time on the highway. Left no control enabled, right control algorithm active.
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;In the previous case, the controller adjusted the speed limit shown on VMS along the highway. Those VMS were placed virtually every
500m along the highway, which would be very expensive to implement on real highways. Therefore, we reduced the number of
VMS placed along the highway and tested the algorithm again. VMS were now placed at strategic positions rather than equidistant. To be more
precisely, five VMS were placed between two consecutive on-ramps, having one VMS to control the speed near the bottleneck, three safety VMS which reduce
the speed stepwise further upstream, and one VMS after the on-ramp to release the vehicles from the control area. As a result, we
could spare over 60% of the VMS placed along the specific highway stretch without seeing much difference in the results.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-in-the-left-case-vms-are-placed-every-500m-in-the-right-case-only-few-vms-at-strategic-locations&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/traffic-control/teac-full-vms-vs-few-vms_hu3f36ae42f5012c9c73c42f4df7e25b4b_266372_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;In the left case, VMS are placed every 500m. In the right case only few VMS at strategic locations.&#34;&gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/traffic-control/teac-full-vms-vs-few-vms_hu3f36ae42f5012c9c73c42f4df7e25b4b_266372_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;70%&#34; height=&#34;400&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    In the left case, VMS are placed every 500m. In the right case only few VMS at strategic locations.
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;In addition to controlling the traffic by setting VMS, vehicles do receive speed limits or speed advices via communication using IVI messages.
Those messages contain control decisions for each segment and are spread to the vehicles using ITS-G5 adhoc communication. For this purpose,
the simulation scenario is modelled in a way, that a road side unit is placed at each segment entry. Equipped vehicles adjust their speeds and
therefore control the traffic flow as a whole, as other vehicles (e.g. their followers) are forced to adjust their speeds as well. With this fact
given, we did another experiment in which we eliminated all VMS completely and sent speed limits only via V2X communication to
equipped vehicles. This, on one hand, already works with rather low penetration rates of 15 percent equipped vehicles, as shown in the Figure
below. Furthermore, the higher the penetration rate is, the better the controller works. For high penetration rates, this technique even surpasses the classic
approach via VMS slightly, as connected vehicles can react and controlled more precisely.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-in-the-left-case-traffic-is-controlled-via-vms-in-the-right-case-only-v2x-messages-are-utilized&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.eclipse.dev/mosaic/mosaic/post/traffic-control/teac-full-vms-vs-ivim_hu3f36ae42f5012c9c73c42f4df7e25b4b_269336_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;In the left case traffic is controlled via VMS. In the right case, only V2X messages are utilized.&#34;&gt;


  &lt;img data-src=&#34;https://www.eclipse.dev/mosaic/mosaic/post/traffic-control/teac-full-vms-vs-ivim_hu3f36ae42f5012c9c73c42f4df7e25b4b_269336_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;70%&#34; height=&#34;400&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    In the left case traffic is controlled via VMS. In the right case, only V2X messages are utilized.
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;We modelled complex traffic scenarios including road infrastructures (sensors, dynamic traffic signs, road side units), individual driving
behavior for different SAE levels. Furthermore, we integrated real algorithms for traffic estimation and control into MOSAIC Application
enabling software-in-the-loop tests. By creating and calibrating a highway scenario using real toll data, we could test different
traffic control techniques which showed that traffic flow on highways could be improved, even with novel approaches which do not
rely on classic infrastructure such as road sensors and Variable Message Signs, but almost solely on V2X communication.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




&lt;a href=&#34;https://www.inframix.eu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;inframix.png&#34; alt=&#34;INFRAMIX EU&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This work was part of the 




&lt;a href=&#34;https://www.inframix.eu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;INFRAMIX&lt;/a&gt; project. INFRAMIX has received funding from
the European Union&amp;rsquo;s Horizon 2020 research and innovation programme under grant
agreement no 723016.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Release of Eclipse MOSAIC</title>
      <link>https://www.eclipse.dev/mosaic/post/release-20-0/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/release-20-0/</guid>
      <description>&lt;p&gt;&lt;strong&gt;The initial contribution is accomplished! With the autumn version, the committer team from Fraunhofer FOKUS and DCAITI is proud to release Eclipse MOSAIC 20.0 to the open source community. With the runtime infrastructure, core libraries and various implementations of simulators or couplings to existing ones, Eclipse MOSAIC includes the essential feature collection for simulation and virtual testing of connected and automated mobility solutions.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;release-date&#34;&gt;Release Date&lt;/h3&gt;
&lt;p&gt;2020-10-19&lt;/p&gt;
&lt;h3 id=&#34;changelog&#34;&gt;Changelog&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[M+] Moved main code to new public repository github-com/eclipse-mosaic
[M+] Changed license to EPL 2.0
[M+] Revised and refactored all public code.
[M+] Significantly improved and extended the documentation, including new tutorials
[M-] Replaced dependencies which are incompatible with EPL.
[M+] Major overhaul of configuration files, e.g.
     * vsimrti/vsimrti_config.xml -&amp;gt; scenario_config.json
     * etc/defaults.xml -&amp;gt; etc/runtime.json
[A+] Mapping configuration has been extended with new features (e.g. typeDistributions, parameter variations).
[A+] New API for traffic light applications
[C+] SNS supports most important Geo-Routing features for ad-hoc multihop communication
[T+] Now supports SUMO 1.7.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Changelog (Features and Bugfixes) Legend:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;[M]&lt;/code&gt; Eclipse MOSAIC&lt;br&gt;
&lt;code&gt;[A]&lt;/code&gt; Application simulator&lt;br&gt;
&lt;code&gt;[B]&lt;/code&gt; Battery simulator&lt;br&gt;
&lt;code&gt;[C]&lt;/code&gt; Communication simulator&lt;br&gt;
&lt;code&gt;[E]&lt;/code&gt; Environment simulator&lt;br&gt;
&lt;code&gt;[N]&lt;/code&gt; Navigation component&lt;br&gt;
&lt;code&gt;[S]&lt;/code&gt; Scenario-convert&lt;br&gt;
&lt;code&gt;[T]&lt;/code&gt; Traffic simulator&lt;br&gt;
&lt;code&gt;[+/-]&lt;/code&gt; new Feature/Bugfix&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Testing mobility scenarios with the Open-Source simulation environment Eclipse MOSAIC</title>
      <link>https://www.eclipse.dev/mosaic/post/eclipse-mosaic/</link>
      <pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://www.eclipse.dev/mosaic/post/eclipse-mosaic/</guid>
      <description>&lt;p&gt;&lt;strong&gt;On the occasion of EclipseCon 2020, Fraunhofer FOKUS launches its simulation environment Eclipse MOSAIC. This solution is based on VSimRTI (Vehicle-2-X Simulation Runtime Infrastructure), which has been developed over the last 15 years in close cooperation with the DCAITI of the TU Berlin and has already been used by more than 600 partners to test mobility services and traffic scenarios. Eclipse MOSAIC is now partially available as open-source.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Whether dynamic lane assignment or traffic light phase assistant, new mobility services are designed to increase safety, efficiency, comfort, and facilitate environmentally friendly transport. The Eclipse MOSAIC simulation environment allows to explore how this can be achieved, before the services are tested in field trials on the road. Eclipse MOSAIC can also be used for testing driver assistance systems and to optimize the entire traffic.&lt;/p&gt;
&lt;h2 id=&#34;flexible-coupling-of-simulators&#34;&gt;Flexible coupling of simulators&lt;/h2&gt;
&lt;p&gt;Eclipse MOSAIC integrates, depending on the simulation scenario, different aspects like individual building blocks into a holistic system, e.g., traffic congestion, battery charging of electric cars, or communication between other road users and a central cloud. The level of detail for individual aspects is variable: from a rough mobility scenario for an entire city to detailed individual driving maneuvers.&lt;/p&gt;
&lt;p&gt;The open-source version of Eclipse MOSAIC already includes several simulators, e.g., Eclipse SUMO for traffic and OMNeT++ and ns-3 for communication. Further simulators can be coupled, e.g., Fraunhofer FOKUS offers the simulator PHABMACS for the realistic modeling of autonomous vehicles.&lt;/p&gt;
&lt;p&gt;In addition to the simulator coupling, Eclipse MOSAIC manages the following tasks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Federation: Individual simulators are interchangeable within a scenario.&lt;/li&gt;
&lt;li&gt;Interaction: Information from one simulator is also taken into account by others.&lt;/li&gt;
&lt;li&gt;Time: All simulators run synchronously.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, Eclipse MOSAIC offers several tools for evaluation and visualization of the results, which are also included in the open-source package.&lt;/p&gt;
&lt;p&gt;In the recently completed EU project INFRAMIX, Eclipse MOSAIC was used to test scenarios for the future road that allow mixed traffic between conventional and automated vehicles.&lt;/p&gt;
&lt;p&gt;Fraunhofer FOKUS has been a strategic development member of the Eclipse Foundation since May of this year and works in close cooperation with the partners of the working groups OpenMobility and openADx (Open Source for Autonomous Driving).&lt;/p&gt;
&lt;p&gt;Further information about Eclipse MOSAIC:
&lt;a href=&#34;https://www.eclipse.dev/mosaic&#34;&gt;https://www.eclipse.dev/mosaic&lt;/a&gt;
&lt;a href=&#34;https://github.com/eclipse/mosaic&#34;&gt;https://github.com/eclipse/mosaic&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Further information about INFRAMIX:
&lt;a href=&#34;https://www.fokus.fraunhofer.de/de/fokus/news/inframix-projekt_2020_08&#34;&gt;https://www.fokus.fraunhofer.de/de/fokus/news/inframix-projekt_2020_08&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Further information about EclipseCon:
&lt;a href=&#34;https://www.eclipsecon.org/2020&#34;&gt;https://www.eclipsecon.org/2020&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
